kind: job
metadata:
  name: sklearn-classifier
  tag: ''
  hash: 15bc6c5ed353d853c4e746a167a643fd4f6824b4
  project: ''
  labels:
    author: yjb
    framework: sklearn
  categories:
  - ml
  - training
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: train_model
  entry_points:
    train_model:
      name: train_model
      doc: "train a classifier\n\nAn optional cutom model evaluator can be supplied\
        \ that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid,\
        \ model)` and return a dictionary of \nscalar \"results\", a \"plots\" keys\
        \ with a list of PlotArtifacts, and \nand \"tables\" key containing a returned\
        \ list of TableArtifacts."
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function context
        default: ''
      - name: model_pkg_class
        type: str
        doc: the model to train, e.g, "sklearn.neural_networks.MLPClassifier",  or
          json model config
        default: ''
      - name: dataset
        type: DataItem
        doc: ("data") name of raw data file
        default: ''
      - name: label_column
        type: str
        doc: ground-truth (y) labels
        default: labels
      - name: encode_cols
        type: List[str]
        doc: dictionary of names and prefixes for columns that are to hot be encoded.
        default: []
      - name: sample
        type: int
        doc: Selects the first n rows, or select a sample starting from the first.
          If negative <-1, select a random sample
        default: <_ast.USub object at 0x10b5f2fd0>
      - name: test_size
        type: float
        doc: (0.05) test set size
        default: 0.3
      - name: train_val_split
        type: float
        doc: (0.75) Once the test set has been removed the training set gets this
          proportion.
        default: 0.7
      - name: test_set_key
        type: str
        doc: key of held out data in artifact store
        default: test_set
      - name: model_evaluator
        doc: (None) a custom model evaluator can be specified
        default: null
      - name: models_dest
        type: str
        doc: ("") models subfolder on artifact path
        default: ''
      - name: plots_dest
        type: str
        doc: plot subfolder on artifact path
        default: plots
      - name: file_ext
        type: str
        doc: ("parquet") format for test_set_key hold out data
        default: parquet
      - name: model_pkg_file
        type: str
        default: ''
      - name: random_state
        type: int
        doc: (1) sklearn rng seed
        default: 1
      outputs:
      - default: ''
      lineno: 28
  description: train any classifier using scikit-learn's API
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCndhcm5pbmdzLnNpbXBsZWZpbHRlcihhY3Rpb249Imlnbm9yZSIsIGNhdGVnb3J5PUZ1dHVyZVdhcm5pbmcpCgppbXBvcnQganNvbgppbXBvcnQgb3MKCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzLCBsb2FkLCBkdW1wCgpmcm9tIHNrbGVhcm4gaW1wb3J0IG1ldHJpY3MKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoKZnJvbSBza2xlYXJuLnByZXByb2Nlc3NpbmcgaW1wb3J0IGxhYmVsX2JpbmFyaXplCmZyb20gc2tsZWFybi5tb2RlbF9zZWxlY3Rpb24gaW1wb3J0IHRyYWluX3Rlc3Rfc3BsaXQKZnJvbSBza2xlYXJuIGltcG9ydCBtZXRyaWNzCgpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdApmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKCmRlZiB0cmFpbl9tb2RlbCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgbW9kZWxfcGtnX2NsYXNzOiBzdHIsCiAgICBkYXRhc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIsCiAgICBlbmNvZGVfY29sczogTGlzdFtzdHJdID0gW10sCiAgICBzYW1wbGU6IGludCA9IC0xLAogICAgdGVzdF9zaXplOiBmbG9hdCA9IDAuMzAsCiAgICB0cmFpbl92YWxfc3BsaXQ6IGZsb2F0ID0gMC43MCwKICAgIHRlc3Rfc2V0X2tleTogc3RyID0gInRlc3Rfc2V0IiwKICAgIG1vZGVsX2V2YWx1YXRvciA9IE5vbmUsCiAgICBtb2RlbHNfZGVzdDogc3RyID0gIiIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAicGxvdHMiLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIG1vZGVsX3BrZ19maWxlOiBzdHIgPSAiIiwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKKSAtPiBOb25lOgogICAgIiIidHJhaW4gYSBjbGFzc2lmaWVyCiAgICAKICAgIEFuIG9wdGlvbmFsIGN1dG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3VwcGxpZWQgdGhhdCBzaG91bGQgaGF2ZSB0aGUgc2lnbmF0dXJlOgogICAgYG15X2N1c3RvbV9ldmFsdWF0b3IoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsKWAgYW5kIHJldHVybiBhIGRpY3Rpb25hcnkgb2YgCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQgCiAgICBhbmQgInRhYmxlcyIga2V5IGNvbnRhaW5pbmcgYSByZXR1cm5lZCBsaXN0IG9mIFRhYmxlQXJ0aWZhY3RzLgogICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxfcGtnX2NsYXNzOiAgIHRoZSBtb2RlbCB0byB0cmFpbiwgZS5nLCAic2tsZWFybi5uZXVyYWxfbmV0d29ya3MuTUxQQ2xhc3NpZmllciIsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCiAgICAKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZSwgbGFiZWxfY29sdW1uKQogICAgCiAgICBpZiBlbmNvZGVfY29sczoKICAgICAgICByYXcgPSBwZC5nZXRfZHVtbWllcyhyYXcsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM9bGlzdChlbmNvZGVfY29scy5rZXlzKCkpLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVmaXg9bGlzdChlbmNvZGVfY29scy52YWx1ZXMoKSksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BfZmlyc3Q9VHJ1ZSkKICAgIAogICAgKHh0cmFpbiwgeXRyYWluKSwgKHh2YWxpZCwgeXZhbGlkKSwgKHh0ZXN0LCB5dGVzdCkgPSAgICAgICAgIGdldF9zcGxpdHMocmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMS10cmFpbl92YWxfc3BsaXQsIHJhbmRvbV9zdGF0ZSkKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCh0ZXN0X3NldF9rZXksIAogICAgICAgICAgICAgICAgICAgICAgICBkZj1wZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PWZpbGVfZXh0LCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQoKICAgIG1vZGVsX2NvbmZpZyA9IGdlbl9za2xlYXJuX21vZGVsKG1vZGVsX3BrZ19jbGFzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQucGFyYW1ldGVycy5pdGVtcygpKQoKICAgIG1vZGVsX2NvbmZpZ1siRklUIl0udXBkYXRlKHsiWCI6IHh0cmFpbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAieSI6IHl0cmFpbi52YWx1ZXN9KQogICAgCiAgICBDbGFzc2lmaWVyQ2xhc3MgPSBjcmVhdGVfY2xhc3MobW9kZWxfY29uZmlnWyJNRVRBIl1bImNsYXNzIl0pCiAgICAKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQogICAgCiAgICBtb2RlbC5maXQoKiptb2RlbF9jb25maWdbIkZJVCJdKQogICAgCiAgICBhcnRpZmFjdF9wYXRoID0gY29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKG1vZGVsc19kZXN0KQogICAgcGxvdHNfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCwgcGxvdHNfZGVzdCkKICAgIGlmIG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICBldmFsX21ldHJpY3MgPSBtb2RlbF9ldmFsdWF0b3IoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgpCiAgICBlbHNlOgogICAgICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxvdHNfYXJ0aWZhY3RfcGF0aD1wbG90c19wYXRoKQogICAgICAgIAogICAgY29udGV4dC5zZXRfbGFiZWwoJ2NsYXNzJywgbW9kZWxfcGtnX2NsYXNzKQogICAgY29udGV4dC5sb2dfbW9kZWwoIm1vZGVsIiwgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWFydGlmYWN0X3BhdGgsCiAgICAgICAgICAgICAgICAgICAgICBleHRyYV9kYXRhPWV2YWxfbWV0cmljcywgCiAgICAgICAgICAgICAgICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgICAgICAgICAgICAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM9eyJjbGFzcyI6IG1vZGVsX3BrZ19jbGFzc30pCgo=
    commands: []
    code_origin: git@github.com:mlrun/functions.git#95ffff518e614a257e04a6f4917ab51ce491e6e3:sklearn_classifier.ipynb
