kind: job
metadata:
  name: xgb-trainer
  tag: ''
  hash: 1370de337f6089ab0bad05343a6d6f22c09544eb
  project: ''
  labels:
    author: yjb
    framework: xgboost
  categories:
  - training
  - ml
  - experimental
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: train_model
  entry_points:
    train_model:
      name: train_model
      doc: 'train an xgboost model.


        Note on imabalanced data:  the `imbal_vec` parameter represents the measured

        class representations in the sample and can be used as a first step in tuning

        an XGBoost model.  This isn''t a hyperparamter, merely an estimate that should

        be set as ''constant'' throughout tuning process.'
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function context
        default: ''
      - name: model_type
        type: str
        doc: the model type to train, "classifier", "regressor"...
        default: ''
      - name: dataset
        type: Union[DataItem, DataFrame]
        doc: ("data") name of raw data file
        default: ''
      - name: label_column
        type: str
        doc: ground-truth (y) labels
        default: labels
      - name: encode_cols
        type: dict
        doc: dictionary of names and prefixes for columns that are to hot be encoded.
        default: {}
      - name: sample
        type: int
        doc: Selects the first n rows, or select a sample starting from the first.
          If negative <-1, select a random sample
        default: <_ast.USub object at 0x102ea7190>
      - name: imbal_vec
        doc: ([]) vector of class weights seen in sample
        default: []
      - name: test_size
        type: float
        doc: (0.05) test set size
        default: 0.25
      - name: valid_size
        type: float
        doc: (0.75) Once the test set has been removed the training set gets this
          proportion.
        default: 0.75
      - name: random_state
        type: int
        doc: (1) sklearn rng seed
        default: 1
      - name: models_dest
        type: str
        doc: destination subfolder for model artifacts
        default: models
      - name: plots_dest
        type: str
        doc: destination subfolder for plot artifacts
        default: plots
      - name: eval_metrics
        type: list
        doc: (["error", "auc"]) learning curve metrics
        default:
        - error
        - auc
      - name: file_ext
        type: str
        doc: format for test_set_key hold out data
        default: parquet
      - name: test_set
        type: str
        default: test_set
      outputs:
      - default: ''
      lineno: 55
  description: train multiple model types using xgboost
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCndhcm5pbmdzLnNpbXBsZWZpbHRlcihhY3Rpb249Imlnbm9yZSIsIGNhdGVnb3J5PUZ1dHVyZVdhcm5pbmcpCgpmcm9tIG1scnVuLm1sdXRpbHMuZGF0YSBpbXBvcnQgZ2V0X3NhbXBsZSwgZ2V0X3NwbGl0cwpmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBnZW5fc2tsZWFybl9tb2RlbCwgZXZhbF9tb2RlbF92Mgpmcm9tIG1scnVuLnV0aWxzLmhlbHBlcnMgaW1wb3J0IGNyZWF0ZV9jbGFzcwoKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CmZyb20gbWxydW4uZGF0YXN0b3JlIGltcG9ydCBEYXRhSXRlbQpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgUGxvdEFydGlmYWN0LCBUYWJsZUFydGlmYWN0Cgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBvcwpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdCwgVW5pb24KCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAogICAgCiAgICBNdWx0aXBsZSBtb2RlbCB0eXBlcyB0aGF0IGNhbiBiZSBlc3RpbWF0ZWQgdXNpbmcKICAgIHRoZSBYR0Jvb3N0IFNjaWtpdC1MZWFybiBBUEkuCiAgICAKICAgIElucHV0IGNhbiBlaXRoZXIgYmUgYSBwcmVkZWZpbmVkIGpzb24gbW9kZWwgY29uZmlndXJhdGlvbiBvciBvbmUKICAgIG9mIHRoZSBmaXZlIHhnYm9vc3QgbW9kZWwgdHlwZXM6ICJjbGFzc2lmaWVyIiwgInJlZ3Jlc3NvciIsICJyYW5rZXIiLAogICAgInJmX2NsYXNzaWZpZXIiLCBvciAicmZfcmVncmVzc29yIi4KICAgIAogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KICAgIAogICAgQmFzZWQgb24gYG1sdXRpbHMubW9kZWxzLmdlbl9za2xlYXJuX21vZGVsYCwgc2VlIHRoZSBmdW5jdGlvbgogICAgYHNrbGVhcm5fY2xhc3NpZmllcmAgaW4gdGhpcyByZXBvc2l0b3J5LgogICAgCiAgICA6cGFyYW0gbW9kZWxfdHlwZTogb25lIG9mICJjbGFzc2lmaWVyIiwgInJlZ3Jlc3NvciIsCiAgICAgICAgICAgICAgICAgICAgICAgInJhbmtlciIsICJyZl9jbGFzc2lmaWVyIiwgb3IKICAgICAgICAgICAgICAgICAgICAgICJyZl9yZWdyZXNzb3IiCiAgICA6cGFyYW0geGdiX3BhcmFtczogY2xhc3MgaW5pdCBwYXJhbWV0ZXJzCiAgICAiIiIKICAgIG10eXBlcyA9IHsKICAgICAgICAiY2xhc3NpZmllciIgICA6ICJ4Z2Jvb3N0LlhHQkNsYXNzaWZpZXIiLAogICAgICAgICJyZWdyZXNzb3IiICAgIDogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIiAgICAgICA6ICJ4Z2Jvb3N0LlhHQlJhbmtlciIsCiAgICAgICAgInJmX2NsYXNzaWZpZXIiOiAieGdib29zdC5YR0JSRkNsYXNzaWZpZXIiLAogICAgICAgICJyZl9yZWdyZXNzb3IiIDogInhnYm9vc3QuWEdCUkZSZWdyZXNzb3IiCiAgICB9CiAgICBpZiBtb2RlbF90eXBlLmVuZHN3aXRoKCJqc29uIik6CiAgICAgICAgbW9kZWxfY29uZmlnID0gbW9kZWxfdHlwZQogICAgZWxpZiBtb2RlbF90eXBlIGluIG10eXBlcy5rZXlzKCk6CiAgICAgICAgbW9kZWxfY29uZmlnID0gbXR5cGVzW21vZGVsX3R5cGVdCiAgICBlbHNlOgogICAgICAgIHJhaXNlIEV4Y2VwdGlvbigidW5yZWNvZ25pemVkIG1vZGVsIHR5cGUsIHNlZSBoZWxwIGRvY3VtZW50YXRpb24iKQoKICAgIHJldHVybiBnZW5fc2tsZWFybl9tb2RlbChtb2RlbF9jb25maWcsIHhnYl9wYXJhbXMpCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IFVuaW9uW0RhdGFJdGVtLCBwZC5jb3JlLmZyYW1lLkRhdGFGcmFtZV0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICBpbWJhbF92ZWMgPSBbXSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjI1LAogICAgdmFsaWRfc2l6ZTogZmxvYXQgPSAwLjc1LAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAogICAgbW9kZWxzX2Rlc3Q6IHN0ciA9ICJtb2RlbHMiLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIGV2YWxfbWV0cmljczogbGlzdD0gWyJlcnJvciIsICJhdWMiXSwKICAgIGZpbGVfZXh0OiBzdHIgPSAicGFycXVldCIsCiAgICB0ZXN0X3NldDogc3RyID0gInRlc3Rfc2V0IgopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgogICAgCiAgICBOb3RlIG9uIGltYWJhbGFuY2VkIGRhdGE6ICB0aGUgYGltYmFsX3ZlY2AgcGFyYW1ldGVyIHJlcHJlc2VudHMgdGhlIG1lYXN1cmVkCiAgICBjbGFzcyByZXByZXNlbnRhdGlvbnMgaW4gdGhlIHNhbXBsZSBhbmQgY2FuIGJlIHVzZWQgYXMgYSBmaXJzdCBzdGVwIGluIHR1bmluZwogICAgYW4gWEdCb29zdCBtb2RlbC4gIFRoaXMgaXNuJ3QgYSBoeXBlcnBhcmFtdGVyLCBtZXJlbHkgYW4gZXN0aW1hdGUgdGhhdCBzaG91bGQKICAgIGJlIHNldCBhcyAnY29uc3RhbnQnIHRocm91Z2hvdXQgdHVuaW5nIHByb2Nlc3MuCiAgICAKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF90eXBlOiAgICAgICAgdGhlIG1vZGVsIHR5cGUgdG8gdHJhaW4sICJjbGFzc2lmaWVyIiwgInJlZ3Jlc3NvciIuLi4KICAgIDpwYXJhbSBkYXRhc2V0OiAgICAgICAgICAgKCJkYXRhIikgbmFtZSBvZiByYXcgZGF0YSBmaWxlCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgIGdyb3VuZC10cnV0aCAoeSkgbGFiZWxzCiAgICA6cGFyYW0gZW5jb2RlX2NvbHM6ICAgICAgIGRpY3Rpb25hcnkgb2YgbmFtZXMgYW5kIHByZWZpeGVzIGZvciBjb2x1bW5zIHRoYXQgYXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGhvdCBiZSBlbmNvZGVkLgogICAgOnBhcmFtIHNhbXBsZTogICAgICAgICAgICBTZWxlY3RzIHRoZSBmaXJzdCBuIHJvd3MsIG9yIHNlbGVjdCBhIHNhbXBsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydGluZyBmcm9tIHRoZSBmaXJzdC4gSWYgbmVnYXRpdmUgPC0xLCBzZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYSByYW5kb20gc2FtcGxlCiAgICA6cGFyYW0gaW1iYWxfdmVjOiAgICAgICAgIChbXSkgdmVjdG9yIG9mIGNsYXNzIHdlaWdodHMgc2VlbiBpbiBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB2YWxpZF9zaXplOiAgICAgICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSByYW5kb21fc3RhdGU6ICAgICAgKDEpIHNrbGVhcm4gcm5nIHNlZWQKICAgIDpwYXJhbSBtb2RlbHNfZGVzdDogICAgICAgZGVzdGluYXRpb24gc3ViZm9sZGVyIGZvciBtb2RlbCBhcnRpZmFjdHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgZGVzdGluYXRpb24gc3ViZm9sZGVyIGZvciBwbG90IGFydGlmYWN0cwogICAgOnBhcmFtIGV2YWxfbWV0cmljczogICAgICAoWyJlcnJvciIsICJhdWMiXSkgbGVhcm5pbmcgY3VydmUgbWV0cmljcwogICAgOnBhcmFtIGZpbGVfZXh0OiAgICAgICAgICBmb3JtYXQgZm9yIHRlc3Rfc2V0X2tleSBob2xkIG91dCBkYXRhCiAgICA6cGFyYW0gdGVzdC1zZXQ6ICAgICAgICAgICh0ZXN0X3NldCkga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWxzIgogICAgcGxvdHNfZGVzdCA9IHBsb3RzX2Rlc3Qgb3IgZiJwbG90cy97Y29udGV4dC5uYW1lfSIKICAgIAogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCiAgICAKICAgIGlmIGVuY29kZV9jb2xzOgogICAgICAgIHJhdyA9IHBkLmdldF9kdW1taWVzKHJhdywgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlKQogICAgCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9ICAgICAgICAgZ2V0X3NwbGl0cyhyYXcsIGxhYmVscywgMywgdGVzdF9zaXplLCB2YWxpZF9zaXplLCByYW5kb21fc3RhdGUpCiAgICAKICAgIGNvbnRleHQubG9nX2RhdGFzZXQodGVzdF9zZXQsIGRmPXBkLmNvbmNhdChbeHRlc3QsIHl0ZXN0XSwgYXhpcz0xKSwgZm9ybWF0PWZpbGVfZXh0LCBpbmRleD1GYWxzZSkKCiAgICBtb2RlbF9jb25maWcgPSBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBYR0JCb29zdENsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQogICAgbW9kZWwgPSBYR0JCb29zdENsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsX2NvbmZpZ1siRklUIl0udXBkYXRlKHsiWCI6IHh0cmFpbiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInkiOiB5dHJhaW4udmFsdWVzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJldmFsX3NldCI6Wyh4dHJhaW4sIHl0cmFpbiksICh4dmFsaWQsIHl2YWxpZCldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJldmFsX21ldHJpYyI6IGV2YWxfbWV0cmljc30pCgogICAgbW9kZWwuZml0KCoqbW9kZWxfY29uZmlnWyJGSVQiXSkKCiAgICBldmFsX21ldHJpY3MgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbCkKICAgIAogICAgbW9kZWxfYmluID0gZHVtcHMobW9kZWwpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgibW9kZWwiLCBib2R5PW1vZGVsX2JpbiwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9b3MucGF0aC5qb2luKGNvbnRleHQuYXJ0aWZhY3RfcGF0aCwgbW9kZWxzX2Rlc3QpLAogICAgICAgICAgICAgICAgICAgICAgbW9kZWxfZmlsZT0ibW9kZWwucGtsIikKCg==
    commands: []
    code_origin: git@github.com:mlrun/functions.git#a9572fb7d5c753c2bae5d92b56c9911532380751:xgb_trainer.ipynb
